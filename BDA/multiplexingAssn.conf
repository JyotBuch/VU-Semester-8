a1.sources= r1
a1.channels= c1 c2 c3 c4
a1.sinks= k1 k2 k3 k4

a1.sources.r1.type = netcat
a1.sources.r1.bind = localhost
a1.sources.r1.port = 4444

a1.channels.c1.type = memory
a1.channels.c1.capacity = 100

a1.channels.c2.type = memory
a1.channels.c2.capacity = 100

a1.channels.c3.type = memory
a1.channels.c3.capacity = 100

a1.channels.c4.type = memory
a1.channels.c4.capacity = 100

a1.sources.r1.interceptors = i1
a1.sources.r1.interceptors.i1.type = regex_extractor
a1.sources.r1.interceptors.i1.regex = ^(\\d)
a1.sources.r1.interceptors.i1.serializers = t
a1.sources.r1.interceptors.i1.serializers.t.name = type

a1.sources.r1.selector.type = multiplexing
a1.sources.r1.selector.header = type
a1.sources.r1.selector.mapping.1 = c1
a1.sources.r1.selector.mapping.2 = c2
a1.sources.r1.selector.mapping.3 = c3
a1.sources.r1.selector.mapping.4 = c4


a1.sinks.k1.type = hdfs
a1.sinks.k1.channel = c1
a1.sinks.k1.hdfs.path = /splitIn1
a1.sinks.k1.hdfs.fileType=DataStream
a1.sinks.k1.hdfs.writeFormat=Text

a1.sinks.k2.channel = c2
a1.sinks.k2.type = hdfs
a1.sinks.k2.hdfs.path = /splitIn2
a1.sinks.k2.hdfs.fileType=DataStream
a1.sinks.k2.hdfs.writeFormat=Text

a1.sinks.k3.type = hdfs
a1.sinks.k3.channel = c3
a1.sinks.k3.hdfs.path = /splitIn3
a1.sinks.k3.hdfs.fileType=DataStream
a1.sinks.k3.hdfs.writeFormat=Text

a1.sinks.k4.channel = c4
a1.sinks.k4.type = hdfs
a1.sinks.k4.hdfs.path = /splitIn4
a1.sinks.k4.hdfs.fileType=DataStream
a1.sinks.k4.hdfs.writeFormat=Text

a1.sources.r1.channels = c1 c2 c3 c4
a1.sinks.k2.channel = c2
a1.sinks.k1.channel = c1
a1.sinks.k3.channel = c3
a1.sinks.k4.channel = c4
